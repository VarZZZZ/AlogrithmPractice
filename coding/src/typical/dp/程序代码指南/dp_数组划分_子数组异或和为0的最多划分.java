package typical.dp.程序代码指南;

public class dp_数组划分_子数组异或和为0的最多划分 {
    // book 228
    // 假设dp[0]-dp[i-1]的已经求出，如何求dp[i]的最多划分次数，有两种情况，
    //1.最有划分的最后一个子数组，异或和不等于0； dp[i]=dp[i-1]+1
    //2.最优划分的最后一个子数组，等于0；   dp[k-1]+1; 如何找到k；
    //记arr[0..0]的异或和，arr[0..1]的异或和，arr[0..i-1]的异或和,假设arr[0,i]的异或和为eor,则k为eor上一次出现的位置。如何map存储
}
